6.1~6.15 최종 포트폴리오
6.15 발포
..30 ~ 5.
연휴 과제 : 
1. 본인 이 가고싶은 3개 회사 조사
2. 최종 포트폴리오때 하고 싶은 주제.

5월 11이일 즈음
스프링, plug in, STS


Tensorflow
https://colab.research.google.com/notebooks/welcome.ipynb
으로 접속,
본인 계정으로 로그인 후,
오른 쪽 상단 : 파일 => 새 python 3 노트 선택

텐서플로어!
Google 내 연구와 제품개발을 위한 목적으로 구글 브레인팀이 만든 오픈소스 라이브러리
 데이터 플로우 프로그래밍과 뉴럴 네트워크 같은 기계학습 응용프로그램에도 사용된다.
 - 이중 우리는 deeplearning 에 관한 것을 해보자.

구글에서는 텐서플로우 내부 라이브러리 내부에
각종 모델들을 제공해주는데
그중 대표적인 모델이
이미지 예측. (이미지 인식률이 상당히 좋다.)
그래서 인터넷으로 이미지를 가져와서 파이썬에서 다운받은 모델로
통과시키면 만약 꽃이라면 어떤 꽃인지 까지 예측률이 좋다.

구글에서는 일반 (처음배우는자)를 위해서 예측하기위한 모델,
학습 데이터들을 몽땅 다 제공해 준다.
왜? 사용하면 또 그 데이터들을 본인들이 수집 할 수 있으니까.


Inception3 가 일반적인 이미지를 예측해주는 모델 이름인데
그 모델에 더하서 내가 개인적으로 가지고 있는 이미지 들도 학습을 시킨다.

그렇게 모델 뒷단에 학습을 시키면 그 다음 예측을 더 잘 해줄 수 있다.

처음부터 모델을 만드는 것 보다
구글에서 인셉션3 등 각종 예측 모델들을 다운 받아서
re-training 시켜서 사용하는 것만 잘 해도 tensorflow를 잘 활용할 수 있다.

tensorflow 가 많이 쓰이는 이유?
python 이 쉬운문법때문에 많이 쓰이는 것 처럼
이것도 쓰기 쉬우니까.

tensorflow 를 빨리 배우려변
데이터 흐름을 보여주는 그래프를 잘 해석 시켜야 한다.
Data Flow Graph
텐서플로는  데이터 플로우 그래프 라고 보면된다.
데이터를 흘려보내서 어떤 식으로 데이터가 흘러가서
어떻게 계산되고, 이런 데이터가 흘러가는 그래프의 덩어리라고 보면 된다.
이걸 잘 해석해야 이해할 수 있다.

# 순환신경망 레이어모델 샘플

Tensorflow는 Data Flow Graph 형태고 그대로 작동된다.
Data Flow Graph 구성요소
노드(Node) : 텐서를 처리하는 연산(Operations) 
엣지(Edge) : 노드 사이를 이동하는 다차원 데이터 배열(텐서, Tensor) 를 나타낸다.
텐서, 즉 데이터가 노드를 지나면서 연산이 이루어진다.(데이터가 노드를 지나가는 경로)
텐서가 그래프 상에서 이동하여 Tensorflow 이다.

첫번째 데이터가 들어오면
모델 내부에 다중 레이어가 생성된다.
예를 들어 이미지면 숫자로 바꿔서 들어가면
특정 모델의 특정 레이어로 들어가서 계속 연산이 일어남.

Tenser 데이터 구조가 이동하면서 Node에 의해서 연산이 이루어지고
그로 인해서 어떤 값들이 만들어지고 이런 흐름이 이루어진다.

tensro 란@
Tensor는 배열(array)로서 어떤 값이든 될 수 있다(다차원이든 일차원이든)
Tensor 를 설명할 땐(Rank)와 모양(Shape), 종류(Type)를 사용한다.

랭크 - 데이터 ,즉 tensor 에 대한 차원 수.
0 - scalar
1 - Vector
2 - Metrix
3 - 3-Tensor
n - n-Tensor


모양 - Shape
각각의 차원에 몇 개의 원소가 들어있는지를 의미한다.
t = [[1,2,3],[4,5,6],[7,8,9]] 이면 shape은 [3,3] 이다.

배열에 Shape가 [] 이렇게 들어가있는것은 0차원 배열이 아니고 값이 하나인 것이다.

종류(Type)
데이터의 타입으로 대부분의 경우 Float32를 사용한다.
Tensor들은 노드(Node)를 지나면서 연산이 이루어지며, 결과값이 나와 변수가 업데이트 된다.



Keras  원래는 하나의 단독 라이브러리
일반적인 학습 모델이라기 보다
신경망을 사용하는 학습 모델을 갖고 있는. 가장 대표적인 라이브러리

Tensorflow 가 맨첨 만들어졌을때 keras와 따로따로 였다.
그러나 버젼업 되면서 keras 를 Tensorflow 안에 포함시몄다.

Keras 특징
- 4가지 주요 특징
 - 모듈화 - 원래 단독 라이브였기 때문에 케라스에서 제공하는 모듈들은 독립적이고
  설정 가능하며, 가능한 최소한의 제약사항으로 서로 연결괼 수 있따. 
 - 최소주의 - 각 모듈은 짧고 간결,  단 반복 속도와 혁신성에서는 다소 떨어 질 수 있다.
 - 쉬운 확장성. - 새로운 클래스나 함수로 모듈을 아주 쉽게 추가할 수 있다.
 - 파이썬 기반
Caffe 처럼 별도의 모델 설정 파일이 필요없으며 파이썬 코드로 모델들이 정의디된다.

케라스의 가장 핵심적인 구조 ! 모델 !
그중 가장 간단하게 접근할수 있는게 sequence 모델.
이 시퀀스 모델을 이용하여 학습모델에대한 레이어를 설정하준다.
순차적으로 위로 올라마면서 연산하는 형태이기때문에.sequence 모델이다.

1. 데이터 셋 생성하기
 -  원본데이터 불러오거나, 블러온 데이터를 가공 차리 하거나, 임상 실험을 하거나
이와 같은 원시데이터가 있어야겠지


훈련 데이텃셋, 검증셋, 시험셋 을 사용한다.
딥러닝 모델의 학습 계

2.모델 구성하기
 시퀀스 모델 객체 를 사용해서 레이어들을 쌓아 놓는다.

3 학습모델을 만들어지면 학습 과정을 만들어 준다.
 일반적으로 모델은 그냥 가져다 썻느데 우린 학습 모델에 학습과정까지 지정해주니까
 더 깊은 학습니 가증하다
 손실 함수 및 최적화 방법을 정의 케라스에서는 compile() 함수를 사용

4 모델 학습 시키기
 - 훈련 셋을 이용하여 구성한 모델로 학습
 - 케라스에서는 fit() 함수를 사용

5. 학습과정 살펴보기
 - 모델 학습 시 훈련셋, 검증셋의 손실 및 정확도를 실시간으로
 - 반복획수에 따른 손실 및 정화도 투이를 볼수 있다.

6. 모델 평가하기
 - 훈련셋 이 아닌 시험셋을 사용하여 모델을 평가
 - keras 에서는 evaluate() 함수를 사용한다.

7. 모델 사용하기
 - 임의의 립력으로 모델의 출력을 얻는다.
 - 케라스에서는 predict() 함수를 사용한다.



머신러닝. 딥러닝 차이점

데이터셋 준비하는것 같다
scaler 하는것도 같다.

머신러닝은 만들어진 모델을 이용해서 훈련시키고 
거기에 대한 결과만 확인 가능..
모델의 내부를 알수 없다. (생성자에 줄 인자만 선택가능했지)
결과가 나올때까지 알수 없다.


딥러닝은 모델 자체를 설계하는데
기본적으로 layer를 설계한다.
layer를 쌓은다음 어떤 학습 과정을 거치는지 학습과정도 설계 가능
과정별로 중간결과를 체크 할 수 있다.


케라스에서 
레이어를 순차적으로 쌓아주는 모델이 Sequential 모델
케라스에서는 층(layer을 조합하여 모델(model)을 만든다.

tf.keras.Sequential 모델.
모통 단층모델 사용안한다. 다층 모델 사용.

1. 임포트
from tensorflow.keras import layers

2. 모델 객체 생성
model = tf.kerasSequential()

3. 레이어 생성
첫번쨰 층을 64 개 방을 갖고 있는 레이어
model.add(layers.Danse(64, activation='relu')
쌓는 순서대로 위로 쌓인다.
activation = 'softmax' =>값 레이어
유닛갯수, 알고리즘



